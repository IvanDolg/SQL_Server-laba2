--------------------------------------- 2 LABA -------------------------------------------------------------------------

-- 1 TASK 
a) добавьте в таблицу dbo.PersonPhone поле City типа nvarchar(30);
b) объявите табличную переменную с такой же структурой как dbo.PersonPhone и заполните ееданными из dbo.PersonPhone. Поле City заполните значениями из таблицы Person.Address поля City, аполе PostalCode значениями из Person.Address поля PostalCode. Если поле PostalCode содержит буквы— заполните поле значением по умолчанию;
c) обновите данные в полях PostalCode и City в dbo.PersonPhone данными из табличной переменной.Также обновите данные в поле PhoneNumber. Добавьте код ‘1 (11)’ для тех телефонов, для которыхэтот код не указан;
d) удалите данные из dbo.PersonPhone для сотрудников компании, то есть где PersonType вPerson.Person равен ‘EM’;
e) удалите полe City из таблицы, удалите все созданные ограничения и значения по умолчанию.
Имена ограничений вы можете найти в метаданных. Например:
SELECT * FROM AdventureWorks2012.INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'PersonPhone';
Имена значений по умолчанию найдите самостоятельно, приведите код, которым пользовались дляпоиска;
f) удалите таблицу dbo.PersonPhone.


-- 2 TASK 
a) выполните код, созданный во втором задании второй лабораторной работы. Добавьте в таблицуdbo.PersonPhone поля OrdersCount INT и CardType NVARCHAR(50). Также создайте в таблицевычисляемое поле IsSuperior, которое будет хранить 1, если тип карты ‘SuperiorCard’ и 0 дляостальных карт.
b) создайте временную таблицу #PersonPhone, с первичным ключом по полю BusinessEntityID.Временная таблица должна включать все поля таблицы dbo.PersonPhone за исключением поляIsSuperior.
c) заполните временную таблицу данными из dbo.PersonPhone. Поле CardType заполните данными изтаблицы Sales.CreditCard. Посчитайте количество заказов, оплаченных каждой картой (CreditCardID)в таблице Sales.SalesOrderHeader и заполните этими значениями поле OrdersCount. Подсчетколичества заказов осуществите в Common Table Expression (CTE).
d) удалите из таблицы dbo.PersonPhone одну строку (где BusinessEntityID = 297)
e) напишите Merge выражение, использующее dbo.PersonPhone как target, а временную таблицу какsource. Для связи target и source используйте BusinessEntityID. Обновите поля OrdersCount и CardType,если запись присутствует в source и target. Если строка присутствует во временной таблице, но несуществует в target, добавьте строку в dbo.PersonPhone. Если в dbo.PersonPhone присутствует такаястрока, которой не существует во временной таблице, удалите строку из dbo.PersonPhone.

-- 3 TASK 
a) Создайте таблицу Sales.CurrencyHst, которая будет хранить информацию об изменениях в таблицеSales.Currency.
Обязательные поля, которые должны присутствовать в таблице: ID — первичный ключIDENTITY(1,1); Action — совершенное действие (insert, update или delete); ModifiedDate — дата ивремя, когда была совершена операция; SourceID — первичный ключ исходной таблицы; UserName— имя пользователя, совершившего операцию. Создайте другие поля, если считаете их нужными.
b) Создайте три AFTER триггера для трех операций INSERT, UPDATE, DELETE для таблицыSales.Currency. Каждый триггер должен заполнять таблицу Sales.CurrencyHst с указанием типаоперации в поле Action.
c) Создайте представление VIEW, отображающее все поля таблицы Sales.Currency. Сделайтеневозможным просмотр исходного кода представления.
d) Вставьте новую строку в Sales.Currency через представление. Обновите вставленную строку.Удалите вставленную строку. Убедитесь, что все три операции отображены в Sales.CurrencyHst.
